@model IEnumerable<WardrobeProject.Models.Wardrobes>

@{
    ViewBag.Title = "Index";
}
<!--Wardrobes views ended up being different than my other Key Views  It contains all the data of each view.-->
<body id="wardrobeindexbody">  <!--I set IDs for each because each key views are different--> 
<div class="jumbotron"> <!--jumbotron-->
    <div class="container-fluid">
        <h2 id="wardrobedisplayheader">Pre-made Outfits</h2>
    </div>
</div>

<p>
    <button type="button" id="createbutton">@Html.ActionLink("Create New", "Create")</button>  <!--to create whole wardrobe from existing data-->
</p>

<div class="row"> <!--loop run to display each entry-->
@foreach (var item in Model)  
{
    <div class="col-md-4">
        <div class="thumbnail" id="wardrobeindex">
            <div class="caption">
                <h2 id="windexheader">Outfit #@Html.DisplayFor(modelItem => item.WardrobeID)</h2>
                <div id="itemdetails">
                <p>@Html.DisplayFor(modelItem => item.Accessories.Hats.HatsName)</p>
                <p>@Html.DisplayFor(modelItem => item.Tops.TopName)</p>
                <p>@Html.DisplayFor(modelItem => item.Bottoms.BottomName)</p>
                <p>@Html.DisplayFor(modelItem => item.Shoes.ShoesName)</p>
                <p>@Html.DisplayFor(modelItem => item.Accessories.Jewelries.JName)</p>
                    @Html.ActionLink("Details", "Details", new { id = item.WardrobeID }, new { @class = "btn btn-success", role = "button" }) <!--These three will get their own buttons-->
                    @Html.ActionLink("Edit", "Edit", new { id = item.WardrobeID }, new { @class = "btn btn-primary", role = "button" })
                    @Html.ActionLink("Delete", "Delete", new { id = item.WardrobeID }, new { @class = "btn btn-danger", role = "button" })
                </div>
            </div>
        </div>
    </div>
}
</div>
    </body>